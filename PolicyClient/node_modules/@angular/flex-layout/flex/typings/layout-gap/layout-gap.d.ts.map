{"version":3,"file":"layout-gap.d.ts","sources":["/Users/abhishekkargawal/Documents/Nupur/policies-list/PolicyClient/node_modules/@angular/flex-layout/flex/typings/layout-gap/layout-gap.d.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ElementRef, OnChanges, SimpleChanges, AfterContentInit, OnDestroy, NgZone } from '@angular/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { BaseDirective, MediaMonitor, StyleUtils } from '@angular/flex-layout/core';\nimport { Subscription } from 'rxjs';\nimport { Layout, LayoutDirective } from '../layout/layout';\n/**\n * 'layout-padding' styling directive\n *  Defines padding of child elements in a layout container\n */\nexport declare class LayoutGapDirective extends BaseDirective implements AfterContentInit, OnChanges, OnDestroy {\n    private _zone;\n    private _directionality;\n    protected _layout: string;\n    protected _layoutWatcher?: Subscription;\n    protected _observer?: MutationObserver;\n    private _directionWatcher;\n    gap: string;\n    gapXs: string;\n    gapSm: string;\n    gapMd: string;\n    gapLg: string;\n    gapXl: string;\n    gapGtXs: string;\n    gapGtSm: string;\n    gapGtMd: string;\n    gapGtLg: string;\n    gapLtSm: string;\n    gapLtMd: string;\n    gapLtLg: string;\n    gapLtXl: string;\n    constructor(monitor: MediaMonitor, elRef: ElementRef, container: LayoutDirective, _zone: NgZone, _directionality: Directionality, styleUtils: StyleUtils);\n    ngOnChanges(changes: SimpleChanges): void;\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     */\n    ngAfterContentInit(): void;\n    ngOnDestroy(): void;\n    /**\n     * Watch for child nodes to be added... and apply the layout gap styles to each.\n     * NOTE: this does NOT! differentiate between viewChildren and contentChildren\n     */\n    protected _watchContentChanges(): void;\n    /**\n     * Cache the parent container 'flex-direction' and update the 'margin' styles\n     */\n    protected _onLayoutChange(layout: Layout): void;\n    /**\n     *\n     */\n    protected _updateWithValue(value?: string): void;\n    /**\n     *\n     */\n    private _buildGridPadding;\n    /**\n     * Prepare margin CSS, remove any previous explicitly\n     * assigned margin assignments\n     * Note: this will not work with calc values (negative calc values are invalid)\n     */\n    private _buildGridMargin;\n    /**\n     * Prepare margin CSS, remove any previous explicitly\n     * assigned margin assignments\n     */\n    private _buildCSS;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;AAgBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA;"}