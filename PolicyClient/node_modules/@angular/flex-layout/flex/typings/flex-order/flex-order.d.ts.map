{"version":3,"file":"flex-order.d.ts","sources":["/Users/abhishekkargawal/Documents/Nupur/policies-list/PolicyClient/node_modules/@angular/flex-layout/flex/typings/flex-order/flex-order.d.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ElementRef, OnInit, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport { BaseDirective, MediaMonitor, StyleUtils } from '@angular/flex-layout/core';\n/**\n * 'flex-order' flexbox styling directive\n * Configures the positional ordering of the element in a sorted layout container\n * @see https://css-tricks.com/almanac/properties/o/order/\n */\nexport declare class FlexOrderDirective extends BaseDirective implements OnInit, OnChanges, OnDestroy {\n    order: string;\n    orderXs: string;\n    orderSm: string;\n    orderMd: string;\n    orderLg: string;\n    orderXl: string;\n    orderGtXs: string;\n    orderGtSm: string;\n    orderGtMd: string;\n    orderGtLg: string;\n    orderLtSm: string;\n    orderLtMd: string;\n    orderLtLg: string;\n    orderLtXl: string;\n    constructor(monitor: MediaMonitor, elRef: ElementRef, styleUtils: StyleUtils);\n    /**\n     * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n     */\n    ngOnChanges(changes: SimpleChanges): void;\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     */\n    ngOnInit(): void;\n    protected _updateWithValue(value?: string): void;\n    protected _buildCSS(value?: string): {\n        order: number;\n    };\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAcA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;"}