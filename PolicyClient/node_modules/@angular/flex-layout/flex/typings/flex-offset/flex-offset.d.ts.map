{"version":3,"file":"flex-offset.d.ts","sources":["/Users/abhishekkargawal/Documents/Nupur/policies-list/PolicyClient/node_modules/@angular/flex-layout/flex/typings/flex-offset/flex-offset.d.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ElementRef, OnInit, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { BaseDirective, MediaMonitor, StyleDefinition, StyleUtils } from '@angular/flex-layout/core';\nimport { Subscription } from 'rxjs';\nimport { Layout, LayoutDirective } from '../layout/layout';\n/**\n * 'flex-offset' flexbox styling directive\n * Configures the 'margin-left' of the element in a layout container\n */\nexport declare class FlexOffsetDirective extends BaseDirective implements OnInit, OnChanges, OnDestroy {\n    protected _container: LayoutDirective;\n    private _directionality;\n    private _directionWatcher;\n    offset: string;\n    offsetXs: string;\n    offsetSm: string;\n    offsetMd: string;\n    offsetLg: string;\n    offsetXl: string;\n    offsetLtSm: string;\n    offsetLtMd: string;\n    offsetLtLg: string;\n    offsetLtXl: string;\n    offsetGtXs: string;\n    offsetGtSm: string;\n    offsetGtMd: string;\n    offsetGtLg: string;\n    constructor(monitor: MediaMonitor, elRef: ElementRef, _container: LayoutDirective, _directionality: Directionality, styleUtils: StyleUtils);\n    /**\n     * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n     */\n    ngOnChanges(changes: SimpleChanges): void;\n    /**\n     * Cleanup\n     */\n    ngOnDestroy(): void;\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     */\n    ngOnInit(): void;\n    /** The flex-direction of this element's host container. Defaults to 'row'. */\n    protected _layout: {\n        direction: string;\n        wrap: boolean;\n    };\n    /**\n     * Subscription to the parent flex container's layout changes.\n     * Stored so we can unsubscribe when this directive is destroyed.\n     */\n    protected _layoutWatcher?: Subscription;\n    /**\n     * If parent flow-direction changes, then update the margin property\n     * used to offset\n     */\n    protected watchParentFlow(): void;\n    /**\n     * Caches the parent container's 'flex-direction' and updates the element's style.\n     * Used as a handler for layout change events from the parent flex container.\n     */\n    protected _onLayoutChange(layout?: Layout): void;\n    /**\n     * Using the current fxFlexOffset value, update the inline CSS\n     * NOTE: this will assign `margin-left` if the parent flex-direction == 'row',\n     *       otherwise `margin-top` is used for the offset.\n     */\n    protected _updateWithValue(value?: string | number): void;\n    protected _buildCSS(offset?: string | number): StyleDefinition;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;AAgBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;"}