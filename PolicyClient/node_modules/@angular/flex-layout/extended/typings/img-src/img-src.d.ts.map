{"version":3,"file":"img-src.d.ts","sources":["/Users/abhishekkargawal/Documents/Nupur/policies-list/PolicyClient/node_modules/@angular/flex-layout/extended/typings/img-src/img-src.d.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ElementRef, OnInit, OnChanges } from '@angular/core';\nimport { BaseDirective, MediaMonitor, StyleUtils } from '@angular/flex-layout/core';\n/**\n * This directive provides a responsive API for the HTML <img> 'src' attribute\n * and will update the img.src property upon each responsive activation.\n *\n * e.g.\n *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n *\n * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n */\nexport declare class ImgSrcDirective extends BaseDirective implements OnInit, OnChanges {\n    protected _elRef: ElementRef;\n    protected _monitor: MediaMonitor;\n    protected _styler: StyleUtils;\n    protected _platformId: Object;\n    protected _serverModuleLoaded: boolean;\n    srcBase: string;\n    srcXs: string;\n    srcSm: string;\n    srcMd: string;\n    srcLg: string;\n    srcXl: string;\n    srcLtSm: string;\n    srcLtMd: string;\n    srcLtLg: string;\n    srcLtXl: string;\n    srcGtXs: string;\n    srcGtSm: string;\n    srcGtMd: string;\n    srcGtLg: string;\n    constructor(_elRef: ElementRef, _monitor: MediaMonitor, _styler: StyleUtils, _platformId: Object, _serverModuleLoaded: boolean);\n    /**\n     * Listen for responsive changes to update the img.src attribute\n     */\n    ngOnInit(): void;\n    /**\n     * Update the 'src' property of the host <img> element\n     */\n    ngOnChanges(): void;\n    /**\n     * Use the [responsively] activated input value to update\n     * the host img src attribute or assign a default `img.src=''`\n     * if the src has not been defined.\n     *\n     * Do nothing to standard `<img src=\"\">` usages, only when responsive\n     * keys are present do we actually call `setAttribute()`\n     */\n    protected _updateSrcFor(): void;\n    /**\n     * Cache initial value of 'src', this will be used as fallback when breakpoint\n     * activations change.\n     * NOTE: The default 'src' property is not bound using @Input(), so perform\n     * a post-ngOnInit() lookup of the default src value (if any).\n     */\n    protected cacheDefaultSrc(value?: string): void;\n    /**\n     * Empty values are maintained, undefined values are exposed as ''\n     */\n    protected readonly defaultSrc: string;\n    /**\n     * Does the <img> have 1 or more src.<xxx> responsive inputs\n     * defined... these will be mapped to activated breakpoints.\n     */\n    protected readonly hasResponsiveKeys: boolean;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;AAkBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;"}