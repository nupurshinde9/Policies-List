{"version":3,"file":"class.d.ts","sources":["/Users/abhishekkargawal/Documents/Nupur/policies-list/PolicyClient/node_modules/@angular/flex-layout/extended/typings/class/class.d.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { DoCheck, ElementRef, IterableDiffers, KeyValueDiffers, OnChanges, OnDestroy, Renderer2, SimpleChanges, OnInit } from '@angular/core';\nimport { NgClass } from '@angular/common';\nimport { BaseDirective, BaseDirectiveAdapter, MediaMonitor, StyleUtils } from '@angular/flex-layout/core';\n/** NgClass allowed inputs **/\nexport declare type NgClassType = string | string[] | Set<string> | {\n    [klass: string]: any;\n};\n/**\n * Directive to add responsive support for ngClass.\n * This maintains the core functionality of 'ngClass' and adds responsive API\n * Note: this class is a no-op when rendered on the server\n */\nexport declare class ClassDirective extends BaseDirective implements DoCheck, OnChanges, OnDestroy, OnInit {\n    protected monitor: MediaMonitor;\n    protected _iterableDiffers: IterableDiffers;\n    protected _keyValueDiffers: KeyValueDiffers;\n    protected _ngEl: ElementRef;\n    protected _renderer: Renderer2;\n    private readonly _ngClassInstance;\n    protected _styler: StyleUtils;\n    /**\n     * Intercept ngClass assignments so we cache the default classes\n     * which are merged with activated styles or used as fallbacks.\n     * Note: Base ngClass values are applied during ngDoCheck()\n     */\n    ngClassBase: NgClassType;\n    /**\n     * Capture class assignments so we cache the default classes\n     * which are merged with activated styles and used as fallbacks.\n     */\n    klazz: string;\n    ngClassXs: NgClassType;\n    ngClassSm: NgClassType;\n    ngClassMd: NgClassType;\n    ngClassLg: NgClassType;\n    ngClassXl: NgClassType;\n    ngClassLtSm: NgClassType;\n    ngClassLtMd: NgClassType;\n    ngClassLtLg: NgClassType;\n    ngClassLtXl: NgClassType;\n    ngClassGtXs: NgClassType;\n    ngClassGtSm: NgClassType;\n    ngClassGtMd: NgClassType;\n    ngClassGtLg: NgClassType;\n    constructor(monitor: MediaMonitor, _iterableDiffers: IterableDiffers, _keyValueDiffers: KeyValueDiffers, _ngEl: ElementRef, _renderer: Renderer2, _ngClassInstance: NgClass, _styler: StyleUtils);\n    /**\n     * For @Input changes on the current mq activation property\n     */\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnInit(): void;\n    /**\n     * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n     */\n    ngDoCheck(): void;\n    ngOnDestroy(): void;\n    /**\n     * Build an mqActivation object that bridges mql change events to onMediaQueryChange handlers\n     * NOTE: We delegate subsequent activity to the NgClass logic\n     *       Identify the activated input value and update the ngClass iterables...\n     *       Use ngDoCheck() to actually apply the values to the element\n     */\n    protected _configureMQListener(baseKey?: string): void;\n    /**\n     * Special adapter to cross-cut responsive behaviors and capture mediaQuery changes\n     * Delegate value changes to the internal `_ngClassInstance` for processing\n     */\n    protected _base: BaseDirectiveAdapter;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;AAWA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA;"}