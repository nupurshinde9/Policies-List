{"version":3,"file":"animation_driver.d.ts","sources":["/Users/abhishekkargawal/Documents/Nupur/policies-list/PolicyClient/node_modules/@angular/animations/browser/src/render/animation_driver.d.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { AnimationPlayer } from '@angular/animations';\n/**\n * @publicApi\n */\nexport declare class NoopAnimationDriver implements AnimationDriver {\n    validateStyleProperty(prop: string): boolean;\n    matchesElement(element: any, selector: string): boolean;\n    containsElement(elm1: any, elm2: any): boolean;\n    query(element: any, selector: string, multi: boolean): any[];\n    computeStyle(element: any, prop: string, defaultValue?: string): string;\n    animate(element: any, keyframes: {\n        [key: string]: string | number;\n    }[], duration: number, delay: number, easing: string, previousPlayers?: any[], scrubberAccessRequested?: boolean): AnimationPlayer;\n}\n/**\n * @publicApi\n */\nexport declare abstract class AnimationDriver {\n    static NOOP: AnimationDriver;\n    abstract validateStyleProperty(prop: string): boolean;\n    abstract matchesElement(element: any, selector: string): boolean;\n    abstract containsElement(elm1: any, elm2: any): boolean;\n    abstract query(element: any, selector: string, multi: boolean): any[];\n    abstract computeStyle(element: any, prop: string, defaultValue?: string): string;\n    abstract animate(element: any, keyframes: {\n        [key: string]: string | number;\n    }[], duration: number, delay: number, easing?: string | null, previousPlayers?: any[], scrubberAccessRequested?: boolean): any;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;AAWA;;;;;;;;;;;AASA;;;;;;;;;;;;;;;"}